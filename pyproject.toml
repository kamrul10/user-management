[tool.poetry]
name = "user-management"
version = "1.0.0"
description = "User management application // Last Updated: 2025-03-02"
authors = [
  "Khan, Md Kamrujjaman <kamrujjamankhan18@gmail.com>"
  ]
maintainers = [
  ]
license = "MIT"
readme = "README.md"

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Programming Language :: Python",
  "Operating System :: OS Independent"
]
repository = "https://gitlab.sehlat.io/juliusbaer/gil/lisb-joice-asr-be-bak"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = {extras = ["standard"], version = "^0.115.8"}
pyjwt = "^2.8.0"
python-decouple = "^3.8"
redis = "^5.0.7"
sqlalchemy = "^2.0.31"
uvicorn = "^0.30.1"
requests = "^2.32.3"
toml = "^0.10.2"
rq-dashboard-fast = "^0.5.9"
python-multipart = "^0.0.20"
pydub = "^0.25.1"
grpcio = "1.70.0"
grpcio-tools = "1.70.0"
psycopg2-binary = "^2.9.10"
alembic = "^1.14.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}

[tool.poetry.group.docs.dependencies]
# Doc Checks
interrogate = "^1.7.0"

[tool.poetry.group.dev.dependencies]
# CI checks
black = "^24.4.2"
flake8 = "^7.1.0"
isort = "^5.13.2"
types-requests = "^2.32.0.20241016"
types-toml = "^0.10.8.20240310"

# Testing
mypy = "^1.10.1"
coverage = "^7.6.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
pytest-asyncio = "^0.23.7"

# Security
bandit = {extras = ["toml"], version = "^1.7.9"}

[tool.poetry.scripts]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
# config here: https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = ['/venv/', 'venv/']

[tool.coverage.report]
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]

[tool.coverage.run]
branch = true
source = ["./"]
disable_warnings = ["no-data-collected"]
omit = ["*/conftest.py", "gunicorn_conf.py"]

[tool.coverage.html]
directory = 'coverage_html_report'

[tool.pytest.ini_options]
minversion = "7.0"
# addopts = "--cov ."
# addopts = "--cov --cov-report term --cov-report html:reports/htmlcov --cov-report xml:reports/coverage.xml ."
addopts = "--cov --cov-report term --cov-report html:reports/htmlcov --cov-report xml:reports/coverage_cobertura.xml -rap --junitxml reports/coverage_junit.xml ."
testpaths = ['tests/']
asyncio_mode = "auto"


[tool.isort]
py_version = 312
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true

[tool.black]
target-version = ['py312']
preview = true
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.bandit]
exclude_dirs = ["venv", "tests", "./.*"]

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 95
exclude = ["setup.py", "docs", "build", "archive"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
# possible values: 0 (minimal output), 1 (-v), 2 (-vv)
verbose = 0
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false
generate-badge = "docs/badges/"
badge-format = "svg"